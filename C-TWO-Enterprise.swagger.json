{
  "swagger": "2.0",
  "info": {
    "title": "C TWO",
    "description": "C TWO connector to manage flows and unattended sessions from a single pane of glass",
    "version": "1.0"
  },
  "host": "demo2.rpasupervisor.com",
  "basePath": "/Demo2/CTWO.Server/api/",
  "schemes": [
    "https"
  ],
  "consumes": [],
  "produces": [],
  "paths": {
    "/powerautomate/v1/actions/tasks": {
      "get": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int32",
                    "description": "id"
                  },
                  "name": {
                    "type": "string",
                    "description": "name"
                  }
                }
              }
            }
          }
        },
        "summary": "GetExposedFlows",
        "description": "Get C TWO tasks with Power Automate configuration",
        "operationId": "GetExposedFlows",
        "parameters": [],
        "x-ms-visibility": "internal"
      }
    },
    "/trigger/powerautomate/v1/trigger/ConsumePendingSessions": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "sessions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sessionId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "sessionId"
                      },
                      "workflowTaskId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflowTaskId"
                      },
                      "workflowName": {
                        "type": "string",
                        "description": "workflowName"
                      },
                      "taskName": {
                        "type": "string",
                        "description": "taskName"
                      },
                      "created": {
                        "type": "string",
                        "description": "created"
                      },
                      "processInputValues": {
                        "type": "string",
                        "description": "processInputValues"
                      }
                    }
                  },
                  "description": "sessions"
                }
              }
            }
          }
        },
        "x-ms-trigger": "batch",
        "summary": "Start Flow from Session Request without Timeout",
        "operationId": "StartFlowWithoutTimeout",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetExposedFlows",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-trigger-value": {
              "value-collection": "sessions",
              "value-path": "sessionId"
            }
          }
        ],
        "x-ms-trigger-hint": "Return json body",
        "description": "Trigger flow without timeout when a C TWO Session has been created"
      }
    },
    "/powerautomate/v1/actions/setsessioncompleted": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Set Flow Execution State to Completed",
        "operationId": "SetSessionCompleted",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "@triggerOutputs()?['body/sessionId']"
          }
        ],
        "description": "Change Flow Execution State to Completed",
        "x-ms-visibility": "advanced"
      }
    },
    "/powerautomate/v1/actions/log": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Add Log to Session",
        "description": "Add a log message to given session",
        "operationId": "AddLogToSession",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "@triggerOutputs()?['body/sessionId']"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "level": {
                  "type": "string",
                  "description": "level",
                  "title": "",
                  "enum": [
                    "Trace",
                    "Debug",
                    "Information",
                    "Warning",
                    "Error",
                    "Critical"
                  ],
                  "x-ms-visibility": "important"
                },
                "message": {
                  "type": "string",
                  "description": "message",
                  "title": ""
                }
              },
              "required": [
                "level",
                "message"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/powerautomate/v1/actions/settimeout": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Set a new timeout for the specific session",
        "description": "Set a new timeout for the specific session.",
        "operationId": "SetTimeout",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "@triggerOutputs()?['body/sessionId']"
          },
          {
            "name": "timeout",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ]
      }
    },
    "/powerautomate/v1/actions/setsessionfailed": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {}
          }
        },
        "summary": "Set Flow Execution State to Failed",
        "description": "Change Flow Execution State to Failed",
        "operationId": "SetSessionFailed",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "@triggerOutputs()?['body/sessionId']"
          },
          {
            "name": "body",
            "in": "body",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "details": {
                  "type": "string",
                  "description": "details",
                  "title": "details",
                  "x-ms-visibility": "important"
                }
              },
              "required": [
                "details"
              ],
              "x-ms-visibility": "important"
            },
            "x-ms-visibility": "important"
          }
        ],
        "x-ms-visibility": "advanced"
      }
    },
    "/trigger/powerautomate/v1/trigger/ConsumePendingSessionsWithRequiredTimeout": {
      "post": {
        "responses": {
          "default": {
            "description": "default",
            "schema": {
              "type": "object",
              "properties": {
                "sessions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "sessionId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "sessionId"
                      },
                      "workflowTaskId": {
                        "type": "integer",
                        "format": "int32",
                        "description": "workflowTaskId"
                      },
                      "workflowName": {
                        "type": "string",
                        "description": "workflowName"
                      },
                      "taskName": {
                        "type": "string",
                        "description": "taskName"
                      },
                      "created": {
                        "type": "string",
                        "description": "created"
                      },
                      "processInputValues": {
                        "type": "string",
                        "description": "processInputValues"
                      }
                    }
                  },
                  "description": "sessions"
                }
              }
            }
          }
        },
        "x-ms-trigger": "batch",
        "summary": "Start Flow from Session Request with Timeout",
        "operationId": "StartFlowWithTimeout",
        "x-ms-trigger-metadata": {
          "mode": "polling",
          "kind": "query"
        },
        "parameters": [
          {
            "name": "taskId",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important",
            "x-ms-dynamic-values": {
              "operationId": "GetExposedFlows",
              "value-path": "id",
              "value-title": "name"
            },
            "x-ms-trigger-value": {
              "value-collection": "sessions",
              "value-path": "sessionId"
            }
          },
          {
            "name": "timeout",
            "in": "query",
            "required": true,
            "type": "integer",
            "x-ms-visibility": "important"
          }
        ],
        "x-ms-trigger-hint": "Return json body",
        "description": "Trigger flow with timeout when a C TWO Session has been created"
      }
    },
    "/powerautomate/v1/actions/isstoprequested": {
      "get": {
        "responses": {
          "200": {
            "description": "default",
            "schema": {
              "title": "IsStopRequested",
              "type": "boolean"
            }
          },
          "404": {
            "description": "default",
            "schema": {
              "title": "Details",
              "type": "string"
            },
            "headers": {
              "Accept": {
                "description": "Accept",
                "type": "string"
              }
            }
          }
        },
        "summary": "Should Stop?",
        "operationId": "IsStopRequested",
        "description": "This method will return true if C TWO is requesting a soft stop on the session",
        "x-ms-visibility": "advanced",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "required": true,
            "type": "string",
            "default": "@triggerOutputs()?['body/sessionId']",
            "x-ms-visibility": "important"
          }
        ]
      }
    }
  },
  "definitions": {},
  "parameters": {},
  "responses": {},
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [],
  "tags": []
}